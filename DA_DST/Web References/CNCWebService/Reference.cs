//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace DA_DST.CNCWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="indexSoap", Namespace="http://tempuri.org/")]
    public partial class index : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DevAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDevsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public index() {
            this.Url = global::DA_DST.Properties.Settings.Default.DA_DST_CNCWebService_index;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DevAddCompletedEventHandler DevAddCompleted;
        
        /// <remarks/>
        public event GetDevsCompletedEventHandler GetDevsCompleted;
        
        /// <remarks/>
        public event DataReadCompletedEventHandler DataReadCompleted;
        
        /// <remarks/>
        public event DataUpdateCompletedEventHandler DataUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DevAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DevAdd(string ID) {
            this.Invoke("DevAdd", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void DevAddAsync(string ID) {
            this.DevAddAsync(ID, null);
        }
        
        /// <remarks/>
        public void DevAddAsync(string ID, object userState) {
            if ((this.DevAddOperationCompleted == null)) {
                this.DevAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDevAddOperationCompleted);
            }
            this.InvokeAsync("DevAdd", new object[] {
                        ID}, this.DevAddOperationCompleted, userState);
        }
        
        private void OnDevAddOperationCompleted(object arg) {
            if ((this.DevAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DevAddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDevs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDevs() {
            object[] results = this.Invoke("GetDevs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDevsAsync() {
            this.GetDevsAsync(null);
        }
        
        /// <remarks/>
        public void GetDevsAsync(object userState) {
            if ((this.GetDevsOperationCompleted == null)) {
                this.GetDevsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDevsOperationCompleted);
            }
            this.InvokeAsync("GetDevs", new object[0], this.GetDevsOperationCompleted, userState);
        }
        
        private void OnGetDevsOperationCompleted(object arg) {
            if ((this.GetDevsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDevsCompleted(this, new GetDevsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataRead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DataRead(string ID) {
            object[] results = this.Invoke("DataRead", new object[] {
                        ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataReadAsync(string ID) {
            this.DataReadAsync(ID, null);
        }
        
        /// <remarks/>
        public void DataReadAsync(string ID, object userState) {
            if ((this.DataReadOperationCompleted == null)) {
                this.DataReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataReadOperationCompleted);
            }
            this.InvokeAsync("DataRead", new object[] {
                        ID}, this.DataReadOperationCompleted, userState);
        }
        
        private void OnDataReadOperationCompleted(object arg) {
            if ((this.DataReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataReadCompleted(this, new DataReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataUpdate(string ID, string D) {
            this.Invoke("DataUpdate", new object[] {
                        ID,
                        D});
        }
        
        /// <remarks/>
        public void DataUpdateAsync(string ID, string D) {
            this.DataUpdateAsync(ID, D, null);
        }
        
        /// <remarks/>
        public void DataUpdateAsync(string ID, string D, object userState) {
            if ((this.DataUpdateOperationCompleted == null)) {
                this.DataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataUpdateOperationCompleted);
            }
            this.InvokeAsync("DataUpdate", new object[] {
                        ID,
                        D}, this.DataUpdateOperationCompleted, userState);
        }
        
        private void OnDataUpdateOperationCompleted(object arg) {
            if ((this.DataUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DevAddCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDevsCompletedEventHandler(object sender, GetDevsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDevsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDevsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DataReadCompletedEventHandler(object sender, DataReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DataUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591